---
title: "ST558_Project 1"
authors: "Lamia Benyaine & Scott Van Slyck"
description: "Write functions to manipulate a process data sets"
date: "June 18, 2024"
format: html
editor: visual
---

# *Data Processing*

These are the libraries needed for this program.

```{r libraries}
library(readr)
library(dplyr)
library(tidyr)
```

Write a function that does steps 1 and 2 to select certain columns and convert the data into long format so area_name only has one enrollment value.

```{r}
ed <- read_csv("Data/EDU01a.csv")
```

```{r function for steps 1 & 2}
function_step_1_2 <- function(data, long = "enrollment") {
  data |>
  as_tibble() |>
  rename(area_name = Area_name) |>
  select(area_name, STCOU, ends_with("D")) |>
  pivot_longer(cols = 3:12,
               names_to = "enrollment_year", 
               values_to = "enrollment")
}
function_step_1_2(ed)

```

Write a function that takes in the previous function and converts the pivoted column into a year and a measurement column.

```{r function for steps 3}

```

# *Data Combining*
This is all placeholding until first part is finished so I can see what I need to call.
```{r}
combo = function(data1, data2){
  is_county_level1 = "county" %in% # class of data1
  is_county_level2 = "county" %in% # class of data2
  
    if(is_county_level1 && is_county_level2){
      combo_county = dplyr::bind_rows(data1, data2)
      combo_non_county = tibble()
    } else if(!is_county_level1 && !is_county_level2){
      combo_non_county = dplyr::bind_rows(data1, data2)
      combo_county = tibble()
    } else{
      stop("error")
    }
  return(list(county_data = combo_county, non_county_data = combo_non_county))
}
```
# *Plot State Function*

# *Plot County Function*

# *EDU01 Dataset run*

# *PST01 Dataset run*
